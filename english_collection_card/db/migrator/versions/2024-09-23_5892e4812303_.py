"""empty message

Revision ID: 5892e4812303
Revises: 9d3e3d97fede
Create Date: 2024-09-23 00:23:03.704021

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5892e4812303'
down_revision: Union[str, None] = '9d3e3d97fede'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userr',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('password', postgresql.BYTEA(), nullable=False),
    sa.Column('email', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__userr')),
    sa.UniqueConstraint('id', name=op.f('uq__userr__id')),
    sa.UniqueConstraint('name', name=op.f('uq__userr__name'))
    )
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('name', name='user_name_key')
    )
    op.drop_table('userr')
    # ### end Alembic commands ###
